openapi: 3.0.3
info:
  title: SolidFire Element 12.7 - Magnesium Patch 7
  version: 1.0.0
  contact: {}
servers:
- url: https://{{MVIP}}
- url: https://{{NodeIP}}
- url: https://{{mNode}}
- url: https://{{mNodeIP}}
paths:
  /json-rpc/12.7:
    post:
      tags:
      - Volumes
      summary: AddAccount
      description: AddAccount
      operationId: addaccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  example: 1
                method:
                  type: string
                  example: UpdateBulkVolumeStatus
                params:
                  type: object
                  properties:
                    attributes:
                      type: object
                      properties: {}
                    key:
                      type: string
                      example: <Bulk Volume Job Key>
                    message:
                      type: string
                      example: <Bulk Volume Job Status Message>
                    percentComplete:
                      type: string
                      example: <Optional Percent Complete>
                    status:
                      type: string
                      example: <Bulk Volume Job Status>
            examples:
              CheckPingOnVlan:
                value:
                  id: 1
                  method: CheckPingOnVlan
                  params:
                    hosts: <CSV String of IP Addresses>
                    interface: >-
                      <Existing interface on which the temporary vlan interface is created>
                    sourceAddressV4: <Source IPv4 Address - v4 or v6 Address is Required>
                    sourceAddressV6: <Source IPv6 Address - v4 or v6 Address is Required>
                    virtualNetworkTag: <VLAN on which pings will be tested>
              ClearClusterFaults:
                value:
                  id: 1
                  method: ClearClusterFaults
                  params:
                    faultTypes: '<Optional faults to be cleared: current, resolved or all>'
              CompleteClusterPairing:
                value:
                  id: 1
                  method: CompleteClusterPairing
                  params:
                    clusterPairingKey: <Cluster Pairing Key>
              CreateClusterInterfacePreference:
                value:
                  id: 1
                  method: CreateClusterInterfacePreference
                  params:
                    name: <Name for the New Preference>
                    value: <Value for the New Preference>
              CreateIdpConfiguration:
                value:
                  id: 1
                  method: CreateIdpConfiguration
                  params:
                    idpMetadata: <The XML Metadata from your IdP, URL Encoded>
                    idpName: <Name for your IdP>
              CreateKeyProviderKmip:
                value:
                  id: 1
                  method: CreateKeyProviderKmip
                  params:
                    keyProviderName: <Name of the Key Provider>
              CreatePublicPrivateKeyPair:
                value:
                  id: 1
                  method: CreatePublicPrivateKeyPair
                  params:
                    commonName: <Optional Common Name (CN) string>
                    country: <Optional Country Name (C) string>
                    emailAddress: <Optional Email Address (MAIL) string>
                    locality: <Optional Locality (L) string>
                    organization: <Optional Organization (O) string>
                    organizationalUnit: <Optional Organizational Unit (OU) string>
                    state: <Optional State (ST, SP, or S) string>
              DeleteAllSupportBundles:
                value:
                  id: 1
                  method: DeleteAllSupportBundles
                  params: {}
              DeleteAuthSession:
                value: "{\n\t\"method\": \"DeleteAuthSession\",\n\t\"params\": {\n\t\t\"sessionID\": <UUID of the session to be disconnected>\n\t},\n\t\"id\": 1\n}"
              DeleteAuthSessionsByClusterAdmin:
                value: "{\n\t\"method\": \"DeleteAuthSessionsByClusterAdmin\",\n\t\"params\": {\n\t\t\"clusterAdminID\": <Cluster Admin ID for whom all sessions will be disconnected>\n\t},\n\t\"id\": 1\n}"
              DeleteAuthSessionsByUsername:
                value:
                  id: 1
                  method: DeleteAuthSessionsByUsername
                  params:
                    authMethod: 'One of: Cluster, Ldap or Idp'
                    username: <Username for whom all sessions will be disconnected>
              DeleteClusterInterfacePreference:
                value:
                  id: 1
                  method: DeleteClusterInterfacePreference
                  params:
                    name: <Name of the Preference to be Deleted>
              DeleteIdpConfiguration:
                value:
                  id: 1
                  method: DeleteIdpConfiguration
                  params:
                    idpConfigurationID: <Optional IdP Configuration ID, OR
                    idpName: <Optional Name of your IdP>
              DisableAutoip:
                value:
                  id: 'null'
                  method: DisableAutoip
                  params: {}
              DisableBmcColdReset:
                value:
                  id: 1
                  method: DisableBmcColdReset
                  params: {}
              DisableClusterSsh:
                value:
                  id: 1
                  method: DisableClusterSsh
                  params: {}
              DisableEncryptionAtRest:
                value:
                  id: 1
                  method: DisableEncryptionAtRest
                  params: {}
              DisableIdpAuthentication:
                value:
                  id: 1
                  method: DisableIdpAuthentication
                  params: {}
              DisableLdapAuthentication:
                value:
                  id: 1
                  method: DisableLdapAuthentication
                  params: {}
              DisableSnmp:
                value:
                  id: 1
                  method: DisableSnmp
                  params: {}
              DisableSsh:
                value:
                  id: 'null'
                  method: DisableSsh
                  params: {}
              EnableAutoip:
                value:
                  id: 'null'
                  method: EnableAutoip
                  params: {}
              EnableClusterSsh:
                value:
                  id: 'null'
                  method: EnableClusterSsh
                  params:
                    duration: <Duration to enable SSH in HH:MM:SS format>
              EnableFeature:
                value:
                  id: 1
                  method: EnableFeature
                  params:
                    feature: >-
                      <Feature to Enable. Possible Values: vvols, snapmirror, fips>
              EnableIdpAuthentication:
                value:
                  id: 1
                  method: EnableIdpAuthentication
                  params:
                    idpConfigurationID: <IdP Configuration UUID>
              EnableLdapAuthentication (DirectBind):
                value:
                  id: 1
                  method: EnableLdapAuthentication
                  params:
                    authType: DirectBind
                    groupSearchBaseDN: <Base Distinguished Name for Group Search>
                    groupSearchType: ActiveDirectory
                    serverURIs:
                    - <LDAP Server 1 - IP Address>
                    - <LDAP Server 2 - IP Address>
                    - <LDAP Server 3 - IP Address>
                    - <LDAP Server 4 - IP Address>
                    userDNTemplate: <LDAP User Distinguished Name Template>
              EnableLdapAuthentication (SearchAndBind):
                value:
                  id: 1
                  method: EnableLdapAuthentication
                  params:
                    authType: SearchAndBind
                    groupSearchBaseDN: <Base Distinguished Name for Group Search>
                    groupSearchType: ActiveDirectory
                    searchBindDN: <Read Only LDAP Account Distinguished Name>
                    searchBindPassword: <Read Only LDAP Account Password>
                    serverURIs:
                    - <LDAP Server 1 - IP Address>
                    - <LDAP Server 2 - IP Address>
                    - <LDAP Server 3 - IP Address>
                    - <LDAP Server 4 - IP Address>
                    userSearchBaseDN: <Base Distinguished Name for User Search>
                    userSearchFilter: (&(objectClass=person)(sAMAccountName=%USERNAME%))
              EnableSsh:
                value:
                  id: 'null'
                  method: EnableSsh
                  params:
                    duration: <Duration to enable SSH in HH:MM:SS format>
              GetAPI:
                value:
                  id: 1
                  method: GetAPI
                  params: {}
              GetAPI (Cluster Creation):
                value:
                  id: 1
                  method: GetAPI
                  params: {}
              GetAPI (Per-Node):
                value:
                  id: 1
                  method: GetAPI
                  params: {}
              GetAPI (mNode):
                value:
                  id: 1
                  method: GetAPI
                  params: {}
              GetAccountByName:
                value:
                  id: 1
                  method: GetAccountByName
                  params:
                    username: <Account Name>
              GetActiveTlsCiphers:
                value:
                  id: 1
                  method: GetActiveTlsCiphers
                  params: {}
              GetBinAssignmentProperties:
                value:
                  id: 1
                  method: GetBinAssignmentProperties
                  params: {}
              GetBootstrapConfig:
                value:
                  id: 1
                  method: GetBootstrapConfig
                  params: {}
              GetClientCertficateSignRequest:
                value:
                  id: 1
                  method: GetClientCertificateSignRequest
                  params: {}
              GetClusterCapacity:
                value:
                  id: 1
                  method: GetClusterCapacity
                  params: {}
              GetClusterConfig:
                value:
                  id: 1
                  method: GetClusterConfig
                  params: {}
              GetClusterFullThreshold:
                value:
                  id: 1
                  method: GetClusterFullThreshold
                  params: {}
              GetClusterHardwareInfo:
                value:
                  id: 1
                  method: GetClusterHardwareInfo
                  params: {}
              GetClusterInfo:
                value:
                  id: 1
                  method: GetClusterInfo
                  params: {}
              GetClusterInterfacePreference:
                value:
                  id: 1
                  method: GetClusterInterfacePreference
                  params:
                    name: <The name of the preference to get>
              GetClusterMasterNodeID:
                value:
                  id: 1
                  method: GetClusterMasterNodeID
                  params: {}
              GetClusterSshInfo:
                value:
                  id: 1
                  method: GetClusterSshInfo
                  params: {}
              GetClusterState:
                value:
                  id: 1
                  method: GetClusterState
                  params: {}
              GetClusterStats:
                value:
                  id: 1
                  method: GetClusterStats
                  params: {}
              GetClusterStructure:
                value:
                  id: 1
                  method: GetClusterStructure
                  params: {}
              GetClusterVersionInfo:
                value:
                  id: 1
                  method: GetClusterVersionInfo
                  params: {}
              GetCompleteStats:
                value:
                  id: 1
                  method: GetCompleteStats
                  params: {}
              GetConfig:
                value:
                  id: 1
                  method: GetConfig
                  params: {}
              GetCurrentClusterAdmin:
                value:
                  id: 1
                  method: GetCurrentClusterAdmin
                  params: {}
              GetDefaultQoS:
                value:
                  id: 1
                  method: GetDefaultQoS
                  params: {}
              GetDriveConfig:
                value:
                  id: 1
                  method: GetDriveConfig
                  params: {}
              GetEncryptionAtRestInfo:
                value:
                  id: 1
                  method: GetEncryptionAtRestInfo
                  params: {}
              GetFeatureStatus:
                value:
                  id: 1
                  method: GetFeatureStatus
                  params:
                    feature: >-
                      <Optional feature name. Possible Values: vvols, snapmirror, fips>
              GetFipsReport:
                value:
                  id: 1
                  method: GetFipsReport
                  params: {}
              GetHardwareConfig:
                value:
                  id: 1
                  method: GetHardwareConfig
                  params: {}
              GetHardwareInfo:
                value:
                  id: 1
                  method: GetHardwareInfo
                  params: {}
              GetIdpAuthenticationState:
                value:
                  id: 1
                  method: GetIdpAuthenticationState
                  params: {}
              GetIpmiConfig:
                value:
                  id: 1
                  method: GetIpmiConfig
                  params:
                    chassisType: all
              GetIpmiInfo:
                value:
                  id: 1
                  method: GetIpmiInfo
                  params: {}
              GetLdapConfiguration:
                value:
                  id: 1
                  method: GetLdapConfiguration
                  params: {}
              GetLicenseKey:
                value:
                  id: 1
                  method: GetLicenseKey
                  params: {}
              GetLimits:
                value:
                  id: 1
                  method: GetLimits
                  params: {}
              GetLldpConfig:
                value:
                  id: 1
                  method: GetLldpConfig
                  params: {}
              GetLldpInfo:
                value:
                  id: 1
                  method: GetLldpInfo
                  params: {}
              GetLoginBanner:
                value:
                  id: 1
                  method: GetLoginBanner
                  params: {}
              GetLoginSessionInfo:
                value:
                  id: 1
                  method: GetLoginSessionInfo
                  params: {}
              GetNetworkConfig:
                value:
                  id: 1
                  method: GetNetworkConfig
                  params: {}
              GetNetworkInterface:
                value:
                  id: 1
                  method: GetNetworkInterface
                  params:
                    interface: <Interface Name>
              GetNodeActiveTlsCiphers:
                value:
                  id: 1
                  method: GetNodeActiveTlsCiphers
                  params: {}
              GetNodeFipsDrivesReport:
                value:
                  id: 1
                  method: GetNodeFipsDrivesReport
                  params: {}
              GetNodeSSLCertificate:
                value:
                  id: 1
                  method: GetNodeSSLCertificate
                  params: {}
              GetNodeSupportedTlsCiphers:
                value:
                  id: 1
                  method: GetNodeSupportedTlsCiphers
                  params: {}
              GetNtpInfo:
                value:
                  id: 1
                  method: GetNtpInfo
                  params: {}
              GetNvramInfo:
                value:
                  id: 1
                  method: GetNvramInfo
                  params:
                    force: true
              GetOrigin:
                value:
                  id: 1
                  method: GetOrigin
                  params: {}
              GetPatchInfo:
                value:
                  id: 1
                  method: GetPatchInfo
                  params: {}
              GetPendingOperation:
                value:
                  id: 1
                  method: GetPendingOperation
                  params: {}
              GetProcessInfo:
                value:
                  id: 1
                  method: GetProcessInfo
                  params: {}
              GetProtectionDomainLayout:
                value:
                  id: 1
                  method: GetProtectionDomainLayout
                  params: {}
              GetRawStats:
                value:
                  id: 1
                  method: GetRawStats
                  params: {}
              GetRemoteLoggingHosts:
                value:
                  id: 1
                  method: GetRemoteLoggingHosts
                  params: {}
              GetSSLCertificate:
                value:
                  id: 1
                  method: GetSSLCertificate
                  params: {}
              GetSnmpACL:
                value:
                  id: 1
                  method: GetSnmpACL
                  params: {}
              GetSnmpInfo:
                value:
                  id: 1
                  method: GetSnmpInfo
                  params: {}
              GetSnmpState:
                value:
                  id: 1
                  method: GetSnmpState
                  params: {}
              GetSnmpTrapInfo:
                value:
                  id: 1
                  method: GetSnmpTrapInfo
                  params: {}
              GetSoftwareEncryptionAtRestInfo:
                value:
                  id: 1
                  method: GetSoftwareEncryptionAtRestInfo
                  params: {}
              GetSshInfo:
                value:
                  id: 'null'
                  method: GetSshInfo
                  params: {}
              GetSupportedTlsCiphers:
                value:
                  id: 1
                  method: GetSupportedTlsCiphers
                  params: {}
              GetSystemStatus:
                value:
                  id: 'null'
                  method: GetSystemStatus
                  params: {}
              GetVirtualVolumeCount:
                value:
                  id: 1
                  method: GetVirtualVolumeCount
                  params: {}
              GetVolumeCount:
                value:
                  id: 1
                  method: GetVolumeCount
                  params: {}
              ListActiveAuthSessions:
                value:
                  id: 1
                  method: ListActiveAuthSessions
                  params: {}
              ListActiveNodes:
                value:
                  id: 1
                  method: ListActiveNodes
                  params: {}
              ListActivePairedVolumes:
                value:
                  id: 1
                  method: ListActivePairedVolumes
                  params: {}
              ListAllNodes:
                value:
                  id: 1
                  method: ListAllNodes
                  params: {}
              ListAsyncResults:
                value:
                  id: 1
                  method: ListAsyncResults
                  params:
                    asyncResultTypes:
                    - >-
                      <Optional CSV List of Result Types: One or more of BulkVolume, Clone, DriveAdd, DriveRemoval, or RtfiPendingNode>
              ListAuthSessionsByClusterAdmin:
                value: "{\n\t\"method\": \"ListAuthSessionsByClusterAdmin\",\n\t\"params\": {\n\t\t\"clusterAdminID\": <Cluster Admin ID for whom all sessions will be listed>\n\t},\n\t\"id\": 1\n}"
              ListAuthSessionsByUsername:
                value:
                  id: 1
                  method: ListAuthSessionsByUsername
                  params:
                    authMethod: 'One of: Cluster, Ldap or Idp'
                    username: <Username for whom all sessions will be listed>
              ListBackupTargets:
                value:
                  id: 1
                  method: ListBackupTargets
                  params: {}
              ListBulkVolumeJobs:
                value:
                  id: 1
                  method: ListBulkVolumeJobs
                  params: {}
              ListClusterAdmins:
                value:
                  id: 1
                  method: ListClusterAdmins
                  params: {}
              ListClusterInterfacePreferences:
                value:
                  id: 1
                  method: ListClusterInterfacePreferences
                  params: {}
              ListClusterPairs:
                value:
                  id: 1
                  method: ListClusterPairs
                  params: {}
              ListCoreFiles:
                value:
                  id: 1
                  method: ListCoreFiles
                  params: {}
              ListDriveHardware:
                value:
                  id: 1
                  method: ListDriveHardware
                  params: {}
              ListDrives:
                value:
                  id: 1
                  method: ListDrives
                  params: {}
              ListFibreChannelPortInfo:
                value:
                  id: 1
                  method: ListFibreChannelPortInfo
                  params: {}
              ListFibreChannelSessions:
                value:
                  id: 1
                  method: ListFibreChannelSessions
                  params: {}
              ListISCSISessions:
                value:
                  id: 1
                  method: ListISCSISessions
                  params: {}
              ListIdpConfigurations:
                value: "{\n    \"method\": \"ListIdpConfigurations\",\n    \"params\": {\n    \t\"enabledOnly\": <Optional Boolean true or false>,\n    \t\"idpConfigurationID\": \"<Optional IdP Configuration UUID>\",\n    \t\"idpName\": \"<Optional IdP Name>\"\n    },\n    \"id\": 1\n}"
              ListNetworkInterfaceStats:
                value:
                  id: 1
                  method: ListNetworkInterfaceStats
                  params: {}
              ListNetworkInterfaces:
                value:
                  id: 1
                  method: ListNetworkInterfaces
                  params: {}
              ListNodeFibreChannelPortInfo:
                value:
                  id: 1
                  method: ListNodeFibreChannelPortInfo
                  params: {}
              ListNodeStats:
                value:
                  id: 1
                  method: ListNodeStats
                  params: {}
              ListPendingActiveNodes:
                value:
                  id: 1
                  method: ListPendingActiveNodes
                  params: {}
              ListPendingNodes:
                value:
                  id: 1
                  method: ListPendingNodes
                  params: {}
              ListProtectionDomainLevels:
                value:
                  id: 1
                  method: ListProtectionDomainLevels
                  params: {}
              ListProtocolEndpoints:
                value:
                  id: 1
                  method: ListProtocolEndpoints
                  params:
                    protocolEndpointIDs:
                    - Optional CSV List of Protocol Endpoint IDs
              ListQoSPolicies:
                value:
                  id: 1
                  method: ListQoSPolicies
                  params: {}
              ListSchedules:
                value:
                  id: 1
                  method: ListSchedules
                  params: {}
              ListServices:
                value:
                  id: 1
                  method: ListServices
                  params: {}
              ListStorageContainers:
                value:
                  id: 1
                  method: ListStorageContainers
                  params:
                    storageContainerIDs:
                    - Optional CSV List of Storage Container IDs
              ListSyncJobs:
                value:
                  id: 1
                  method: ListSyncJobs
                  params: {}
              ListTests:
                value:
                  id: 1
                  method: ListTests
                  params: {}
              ListUtlities:
                value:
                  id: 1
                  method: ListUtilities
                  params: {}
              ListVirtualVolumeBindings:
                value:
                  id: 1
                  method: ListVirtualVolumeBindings
                  params:
                    virtualVolumeBindingIDs:
                    - Optional CSV List of Virtual Volume Binding IDs
              ListVirtualVolumeHosts:
                value:
                  id: 1
                  method: ListVirtualVolumeHosts
                  params:
                    virtualVolumeHostIDs:
                    - Optional CSV List of Virtual Volume Host IDs
              ListVirtualVolumeTasks:
                value:
                  id: 1
                  method: ListVirtualVolumeTasks
                  params:
                    virtualVolumeHostIDs:
                    - Optional CSV List of Virtual Volume Task IDs
              ListVolumeAccessGroups:
                value:
                  id: 1
                  method: ListVolumeAccessGroups
                  params: {}
              ModifyClusterInterfacePreference:
                value:
                  id: 1
                  method: ModifyClusterInterfacePreference
                  params:
                    name: <Name of the Preference to Modify>
                    value: <New Value for the Preference>
              RemoveNodeSSLCertificate:
                value:
                  id: 1
                  method: RemoveSSLCertificate
                  params: {}
              RemoveSSLCertificate:
                value:
                  id: 1
                  method: RemoveSSLCertificate
                  params: {}
              ResetDrives:
                value:
                  id: 1
                  method: ResetDrives
                  params:
                    drives: <Drive Name (e.g. slot9)>
                    force: true
              ResetNetworkConfig:
                value:
                  id: 1
                  method: ResetNetworkConfig
                  params: {}
              ResetNodeSupplementalTlsCiphers:
                value:
                  id: 1
                  method: ResetNodeSupplementalTlsCiphers
                  params: {}
              ResetSupplementalTlsCiphers:
                value:
                  id: 1
                  method: ResetSupplementalTlsCiphers
                  params: {}
              RestartNetworking:
                value:
                  id: 1
                  method: RestartNetworking
                  params:
                    force: true
              RestartServices:
                value:
                  id: 1
                  method: RestartServices
                  params:
                    force: true
              SetLoginSessionInfo:
                value:
                  id: 1
                  method: SetLoginSessionInfo
                  params:
                    timeout: <Timeout value in HH:MM:SS>
              SetNodeSSLCertificate:
                value:
                  id: 1
                  method: SetNodeSSLCertificate
                  params:
                    certificate: <SSL Certificate>
                    privateKey: <SSL Private Key>
              SetSSLCertificate:
                value:
                  id: 1
                  method: SetSSLCertificate
                  params:
                    certificate: <SSL Certificate>
                    privateKey: <SSL Private Key>
              SignSshKeys:
                value:
                  id: 'null'
                  method: SignSshKeys
                  params:
                    duration: >-
                      <Optional integer - certificate validity interval in hours. Default: 1>
                    publickey: >-
                      <Optional string - ssh public key to use. If not provided a key will be generated>
                    sfadmin: >-
                      <Optional bool - allows cluster admins to login as sfadmin. Default: false>
              SnmpSendTestTraps:
                value:
                  id: 1
                  method: SnmpSendTestTraps
                  params: {}
              StartClusterPairing:
                value:
                  id: 1
                  method: StartClusterPairing
                  params: {}
              TestConnectEnsemble:
                value:
                  id: 1
                  method: TestConnectEnsemble
                  params:
                    ensemble: <Optional CSV list of Node Cluster IPs>
              TestConnectMvip:
                value:
                  id: 1
                  method: TestConnectMvip
                  params:
                    mvip: <Optional Cluster MVIP>
              TestConnectSvip:
                value:
                  id: 1
                  method: TestConnectSvip
                  params:
                    svip: <Optional Cluster SVIP>
              TestLdapAuthentication (DirectBind):
                value:
                  id: 1
                  method: TestLdapAuthentication
                  params:
                    password: <LDAP Account Password to Test>
                    username: <LDAP Account Full Distinguished Name to Test>
              TestLdapAuthentication (SearchAndBind - Full Call):
                value:
                  id: 1
                  method: TestLdapAuthentication
                  params:
                    ldapConfiguration:
                      authType: SearchAndBind
                      groupSearchBaseDN: <Base Distinguished Name for Group Search>
                      groupSearchType: ActiveDirectory
                      searchBindDN: <Read Only LDAP Account Distinguished Name>
                      searchBindPassword: <Read Only LDAP Account Password>
                      serverURIs:
                      - <LDAP Server 1 - IP Address>
                      - <LDAP Server 2 - IP Address>
                      - <LDAP Server 3 - IP Address>
                      - <LDAP Server 4 - IP Address>
                      userSearchBaseDN: <Base Distinguished Name for User Search>
                      userSearchFilter: (&(objectClass=person)(sAMAccountName=%USERNAME%))
                    password: <LDAP Account Password to Test>
                    username: <LDAP Account Username to Test>
              TestLdapAuthentication (SearchAndBind):
                value:
                  id: 1
                  method: TestLdapAuthentication
                  params:
                    password: <LDAP Account Password to Test>
                    username: <LDAP Account Username to Test>
              TestLocalConnectivity:
                value:
                  id: 1
                  method: TestLocalConnectivity
                  params: {}
              TestLocateCluster:
                value:
                  id: 1
                  method: TestLocateCluster
                  params: {}
              TestNetworkConfig:
                value:
                  id: 1
                  method: TestNetworkConfig
                  params: {}
              TestRemoteConnectivity:
                value:
                  id: 1
                  method: TestRemoteConnectivity
                  params: {}
              UpdateBulkVolumeStatus:
                value:
                  id: 1
                  method: UpdateBulkVolumeStatus
                  params:
                    attributes: {}
                    key: <Bulk Volume Job Key>
                    message: <Bulk Volume Job Status Message>
                    percentComplete: <Optional Percent Complete>
                    status: <Bulk Volume Job Status>
              UpdateIdpConfiguration:
                value: "{\n    \"method\": \"UpdateIdpConfiguration\",\n    \"params\": {\n    \t\"generateNewCertificate\": <Optional Boolean true or false>,\n    \t\"idpConfigurationID\": \"<Optional UUID for the IdP>\",\n        \"idpMetadata\": \"<Optional XML Metadata from your IdP, URL Encoded>\",\n        \"idpName\": \"<Optional Name for your IdP>\",\n        \"newIdpName\": \"<Optional Updated Name for your IdP>\"\n    },\n    \"id\": 1\n}"
          text/plain:
            examples:
              AddAccount:
                value: "{\n\t\"method\": \"AddAccount\",\n    \"params\": {\n        \"username\": \"<Account Username>\",\n        \"enableChap\": <Optional Boolean true or false; default true>,\n        \"initiatorSecret\": \"<Optional Initiator Secret>\",\n        \"targetSecret\": \"<Optional Target Secret>\",\n        \"attributes\": {}\n    },\n    \"id\": 1\n}"
              AddClusterAdmin:
                value: "{\r    \"method\": \"AddClusterAdmin\",\r    \"params\": {\r        \"username\": \"<Cluster Admin Username>\",\r        \"password\": \"<Cluster Admin Password>\",\r        \"access\": [<CSV list of quoted access levels or \"administrator\" for all>],\r        \"acceptEula\": true,\r        \"attributes\": {}\r    },\r    \"id\": 1\r}"
              AddDrives:
                value: "{\n\t\"method\": \"AddDrives\",\n    \"params\": {\n        \"drives\": [\n            {\n            \t\"driveID\": <Drive ID>,\n            \t\"type\": \"<slice or block>\"\n            },\n            {\n            \t\"driveID\": <Drive ID> \n            \t\"type\": \"<slice or block>\"\n            }\n        ],\n        \"forceDuringBinSync\": <Optional boolean true or false>\n    },\n    \"id\": 1\n}"
              AddIdpClusterAdmin:
                value: "{\r    \"method\": \"AddIdpClusterAdmin\",\r    \"params\": {\r        \"username\": \"<key=value pair to match with information from IdP>\",\r        \"access\": [<CSV list of quoted access levels or \"administrator\" for all>],\r        \"acceptEula\": true,\r        \"attributes\": {}\r    },\r    \"id\": 1\r}"
              AddInitiatorsToVolumeAccessGroup:
                value: |
                  {
                      "method": "AddInitiatorsToVolumeAccessGroup",
                      "params": {
                          "volumeAccessGroupID": <Volume Access Group ID>,
                          "initiators": [<CSV List of Initiator IDs (integers) or Quoted IQNs or WWPNs (strings, deprecated)>]
                      },
                      "id : 1
                  }
              AddKeyServerToProviderKmip:
                value: "{\n\t\"method\": \"AddKeyServerToProviderKmip\",\n    \"params\": {\n    \t\"keyProviderID\": <ID of the Key Provider>,\n    \t\"keyServerID\": <ID of the Key Server to Assign>\n    },\n    \"id\": 1\n}"
              AddLdapClusterAdmin:
                value: "{\r    \"method\": \"AddLdapClusterAdmin\",\r    \"params\": {\r        \"username\": \"<Cluster Admin Full Distinguished Name or Group Name from LDAP Server>\",\r        \"access\": [<CSV list of quoted access levels or \"administrator\" for all>],\r        \"acceptEula\": true,\r        \"attributes\": {}\r    },\r    \"id\": 1\r}"
              AddNodes:
                value: "{\r    \"method\": \"AddNodes\",\r    \"params\": {\r        \"pendingNodes\": [<CSV List of Pending Node IDs>],\r        \"autoInstall\" : <Optional boolean true or false>\r    },\r    \"id\": 1\r}"
              AddVirtualNetwork:
                value: |
                  {
                      "method": "AddVirtualNetwork",
                      "params": {
                          "virtualNetworkTag": <Virtual Network/VLAN Tag>,
                          "name": "<Virtual Network Name>",
                          "addressBlocks": [
                              {
                                  "start": "<First IP in Block>",
                                  "size": <Number of IP Addresses in this Block>
                              },
                              {
                                  "start": "<First IP in Block>",
                                  "size": <Number of IP Addresses in this Block>
                              }
                          ],
                          "netmask": "<Netmask for this Virtual Network>",
                          "gateway" : "<Optional gateway address for this Virtual Network>",
                          "svip": "<SVIP for this Virtual Network>",
                          "namespace": <Must be true to use overlapping IPs or a gateway>,
                          "attributes": {}
                      },
                      "id": 1
                  }
              AddVolumesToVolumeAccessGroup:
                value: |
                  {
                      "method": "AddVolumesToVolumeAccessGroup",
                      "params": {
                          "volumeAccessGroupID": <Volume Access Group ID>,
                          "volumes": [<CSV List of Volume IDs>]
                      },
                      "id": 1
                  }
              CancelClone:
                value: "{\r    \"method\": \"CancelClone\",\r    \"params\": {\r        \"cloneID\": <Clone ID for the Ongoing Clone Process>\r    },\r    \"id\": 1\r}"
              CancelGroupClone:
                value: "{\r    \"method\": \"CancelGroupClone\",\r    \"params\": {\r        \"groupCloneID\": <Group Clone ID for the Ongoing Group Clone Process>\r    },\r    \"id\": 1\r}"
              CheckProposedCluster:
                value: "{\r    \"method\": \"CheckProposedCluster\",\r    \"params\": {\r        \"nodes\": [<List of node storage IPs that will comprise the proposed cluster>]\r    },\r    \"id\": 1\r}"
              CheckProposedNodeAdditions:
                value: "{\r    \"method\": \"CheckProposedNodeAdditions\",\r    \"params\": {\r        \"nodes\": [<CSV List of Node Storage IPs>]\r    },\r    \"id\": 1\r}"
              CloneMultipleVolumes:
                value: "{\r    \"method\": \"CloneMultipleVolumes\",\r    \"params\": {\r        \"volumes\": [\r            {\r                \"volumeID\": <Volume ID>\r                \"name\": \"<Optional Clone Volume Name>\",\r                \"access\": \"<Optional Clone Volume Access Level>\",\r                \"newAccountID\": \"<Optional New Account ID>\",\r                \"newSize\": \"<Optional New Clone Volume Size in Bytes>\",\r                \"attributes\": {}\r            },\r            {\r                \"volumeID\": <Volume ID>\r            },\r            {\r                \"volumeID\": <Volume ID>\r            }\r        ],\r        \"access\": \"<Optional Clone Volume Access Level>\",\r        \"groupSnapshotID\": <Optional Group Snapshot to be used as the source for the clone>,\r        \"newAccountID\": <Optional ID of the Account for the new clone volumes>\r    },\r    \"id\": 1\r}"
              CloneVolume:
                value: "{\r    \"method\": \"CloneVolume\",\r    \"params\": {\r        \"volumeID\": <Volume ID>,\r        \"name\": \"<Name of New Cloned Volume>\",\r        \"newAccountID\": <Optional New Account ID>,\r        \"newSize\": <Optional New Size in Bytes>,\r        \"access\": \"<Optional Access Level>\",\r        \"snapshotID\": <Optional ID of the Snapshot to be Used>,\r        \"attributes\": {}\r    },\r    \"id\": 1\r}"
              CompleteVolumePairing:
                value: "{\r    \"method\": \"CompleteVolumePairing\",\r    \"params\": {\r        \"volumeID\": <Volume ID>,\r        \"volumePairingKey\": \"<Volume Pairing Key>\"\r    },\r    \"id\": 1\r}"
              ControlPower:
                value: "{\r    \"method\": \"ControlPower\",\r    \"params\": {\r        \"action\": \"<Either Halt or Restart>\",\r        \"wakeupDelay\": <Delay in seconds to wait for power on.  Only usable with Halt option>\r    },\r    \"id\": 1\r}"
              CopyVolume:
                value: "{\r    \"method\": \"CopyVolume\",\r    \"params\": {\r        \"dstVolumeID\": <VolumeID of the Volume to Overwrite>,\r        \"volumeID\": <VolumeID of the volume to be read from>,\r        \"snapshotID\": <Optional ID of the Snapshot to use as Source of the Copy>\r    },\r    \"id\": 1\r}"
              CreateBackupTarget:
                value: "{\r    \"method\": \"CreateBackupTarget\",\r    \"params\": {\r        \"name\": \"<Backup Target Name>\",\r        \"attributes\": {<Backup Target Parameters>}\r    },\r    \"id\": 1\r}"
              CreateCluster:
                value: "{\r\n    \"method\": \"CreateCluster\",\r\n    \"params\": {\r\n        \"acceptEula\": true,\r\n        \"mvip\": \"<Cluster MVIP>\",\r\n        \"svip\": \"<Cluster SVIP>\",\r\n        \"repCount\": 2,\r\n        \"enableSoftwareEncryptionAtRest\": <Optional boolean true or false>,\r\n        \"orderNumber\": \"<Optional alphanumeric string required for eSDS clusters>\",\r\n        \"serialNumber\": \"<Optional alphanumeric string required for eSDS clusters>\",\r\n        \"username\": \"<Cluster Admin Username>\",\r\n        \"password\": \"<Cluster Admin Password>\",\r\n        \"nodes\": [<CSV List of Quoted Node Storage IP Addresses>],\r\n        \"attributes\": {}\r\n    },\r\n    \"id\": 1\r\n}"
              CreateClusterSupportBundle:
                value: "{\r    \"method\": \"CreateClusterSupportBundle\",\r    \"params\": {\r        \"mvip\": \"<MVIP of Cluster - Either mvip or nodes is required>\",\r        \"nodes\": \"<CSV List of Node IP Addresses>\",\r        \"username\": \"<Cluster Admin Username>\",\r        \"password\": \"<Cluster Admin Password>\",\r        \"allowIncomplete\": <Optional Boolean true or false>,\r        \"bundleName\": \"<Optional Custom name for the support bundle>\",\r        \"extraArgs\": \"<Optional additional arguments>\"\r    },\r    \"id\": 1\r}"
              CreateGroupSnapshot:
                value: "{\r\n    \"method\": \"CreateGroupSnapshot\",\r\n    \"params\": {\r\n        \"volumes\": [<CSV List of Volume IDs>],\r\n        \"name\": \"<Optional Group Snapshot Name>\",\r\n        \"enableRemoteReplication\": <Optional Boolean true or false>,\r\n        \"ensureSerialCreation\": <Optional Boolean true or false>,\r\n        \"retention\": \"<Optional amount of time to retain the snapshot in HH:mm:ss. If neither 'expirationTime' nor 'retention' are specified, the snapshot will not exprire>\",\r\n        \"expirationTime\": \"<Optional amount of time after the snapshot can be removed in HH:mm:ss. A value of 'null' causes the snapshot to be retained permamently. A value of 'fifo' causes the snapshot to be preserved on a First-In-First-Out (FIFO) basis, relative to other FIFO snapshots on the volume. The API will fail if no FIFO space is available>\",\r\n        \"attributes\": {}\r\n    },\r\n    \"id\": 1\r\n}"
              CreateInitiators:
                value: "{\r\n    \"method\": \"CreateInitiators\",\r\n    \"params\": {\r\n        \"initiators\": [\r\n        \t{\r\n        \t\t\"name\": \"<IQN or WWPN of Initiator to Create>\",\r\n            \t\"alias\": \"<Optional Friendly Name for Initiator>\",\r\n            \t\"chapUsername\": \"<Optional CHAP Username>\",\r\n            \t\"initiatorSecret\": \"<Optional CHAP initiator secret>\",\r\n            \t\"targetSecret\": \"<Optional CHAP target secret>\",\r\n            \t\"requireChap\": <Boolean true or false>,\r\n\t\t\t\t\"virtualNetworkIDs\": [<Optional CSV list of VirtualNetwork IDs, Leave Empty for All Networks>],\r\n            \t\"volumeAccessGroupID\": <Optional ID of Destination AG for Initiator>,\r\n            \t\"attributes\": {}\r\n            }\r\n        ]\r\n    },\r\n    \"id\": 1\r\n}"
              CreateKeyServerKmip:
                value: "{\n\t\"method\": \"CreateKeyServerKmip\",\n    \"params\": {\n    \t\"kmipCaCertificate\": \"<The public key certificate of the external key server’s root CA>\",\n    \t\"kmipClientCertificate\": \"<A PEM PKCS#10 X.509 certificate>\",\n    \t\"kmipKeyServerHostnames\": [<Array of strings with IP or Hostname of Key Servers>],\n    \t\"kmipKeyServerName\": \"<The name of the KMIP Key Server>\",\n    \t\"kmipKeyServerPort\": \"<Optional key server port, default is 5696>\"\n    },\n    \"id\": 1\n}"
              CreateQoSPolicy:
                value: "{\r    \"method\": \"CreateQoSPolicy\",\r    \"params\": {\r        \"name\": \"<Name of QoS Policy>\",\r        \"qos\": {\r            \"minIOPS\": <Minimum IOPS>,\r            \"maxIOPS\": <Maximum IOPS>,\r            \"burstIOPS\": <Burst IOPS>\r        }\r    },\r    \"id\": 1\r}"
              CreateSchedule:
                value: "{\r\n    \"method\": \"CreateSchedule\",\r\n    \"params\": {\r\n        \"attributes\": {\r\n            \"frequency\": \"<One of: Time Interval, Days of Week or Days of Month>\"\r\n        },\r\n        \"hours\": \"<Optional Hours between snapshots, used for Time Interval mode>\",\r\n        \"minutes\": \"<Optional Minutes between snapshots, used for Time Interval mode>\",\r\n        \"paused\": <Optional Boolean true or false>,\r\n        \"recurring\": <Optional Boolean true or false>,\r\n        \"runNextInterval\": <Optional Boolean true or false>,\r\n        \"scheduleName\": \"<Name for the schedule>\",\r\n        \"scheduleType\": \"snapshot\",\r\n        \"scheduleInfo\": {\r\n            \"volumeID\": <Volume ID to be snapped>,\r\n            \"volumes\": [<CSV List of Volume IDs to be group snapped>],\r\n            \"name\": \"<Name of the snapshot>\",\r\n            \"enableRemoteReplication\": <Optional Boolean true or false>,\r\n            \"retention\": \"<Optional amount of time to retain the snapshot in HH:mm:ss>\",\r\n\t\t\t\"fifo\": \"<Optional The snapshot to be preserved on a First-In-First-Out (FIFO) basis>\",\r\n\t\t\t\"ensureSerialCreation\": \"<Optional Boolean true or false. Specify if a new snapshot creation should be allowed if a previous snapshot replication is in progress>\"\r\n        },\r\n        \"startingDate\": \"<Optional Starting Date in ISO 8601 Format>\",\r\n        \"monthdays\": [<Optional CSV List of days to run>],\r\n        \"weekdays\": [\r\n            {\"day\": <Day Number>, \"offset\": 1},\r\n            {\"day\": <Day Number>, \"offset\": 1}\r\n        ]\r\n    },\r\n    \"id\": 1\r\n}"
              CreateSnapshot:
                value: "{\r\n    \"method\": \"CreateSnapshot\",\r\n    \"params\": {\r\n        \"volumeID\": <Volume ID>,\r\n        \"snapshotID\": \"<Optional Source Snapshot ID>\",\r\n\t\t\"snapMirrorLabel\": \"<Optional Label used by SnapMirror software to specify snapshot retention policy on SnapMirror endpoint>\",\r\n        \"name\": \"<Optional Snapshot Name>\",\r\n        \"enableRemoteReplication\": <Optional Boolean true or false>,\r\n        \"ensureSerialCreation\": <Optional Boolean true or false>,\r\n        \"retention\": \"<Optional amount of time to retain the snapshot in HH:mm:ss. If neither 'expirationonTime' or 'retention' is specified, the snapshot will be retain until maunally deleted>\",\r\n        \"expirationTime\": \"<Optional amount of time after the snapshot can be removed in HH:mm:ss. A value of 'null' causes the snapshot to be retained permamently. A value of 'fifo' causes the snapshot to be preserved on a First-In-First-Out (FIFO) basis, relative to other FIFO snapshots on the volume. The API will fail if no FIFO space is available>\",\r\n        \"attributes\": {}\r\n    },\r\n    \"id\": 1\r\n}"
              CreateStorageContainer:
                value: "{\r    \"method\": \"CreateStorageContainer\",\r    \"params\": {\r        \"name\": \"<Name of new Storage Container>\",\r        \"accountID\": <Optional ID of Account to Assign to Storage Container>,\r        \"initiatorSecret\": \"<Optional CHAP Secret for Initiator>\",\r        \"targetSecret\": \"<Optional CHAP Secret for Target>\"\r    },\r    \"id\": 1\r}"
              CreateSupportBundle:
                value: "{\r    \"method\": \"CreateSupportBundle\",\r    \"params\": {\r        \"bundleName\": \"<Optional custom name for the support bundle>\",\r        \"extraArgs\": \"<Optional additional arguments>\",\r        \"timeoutSec\": <Optional timeout for the support bundle process in seconds>\r    },\r    \"id\": 1\r}"
              CreateVolume:
                value: "{\r\n    \"method\": \"CreateVolume\",\r\n    \"params\": {\r\n        \"name\": \"<Volume Name>\",\r\n        \"accountID\": <Account ID>,\r\n        \"totalSize\": <Volume Size in Bytes>,\r\n        \"enable512e\": <Boolean true or false>,\r\n\t\t\"access\": \"<Optional the access mode for the volume. Only 'snapMirrorTarget' is allowed>\",\r\n        \"attributes\": {},\r\n        \"qos\": {\r\n            \"minIOPS\": <Optional Minimum IOPS>,\r\n            \"maxIOPS\": <Optional Maximum IOPS>,\r\n            \"burstIOPS\": <Optional Burst IOPS>,\r\n            \"burstTime\": 60\r\n        },\r\n        \"qosPolicyID\": \"<Optional QoS Policy ID>\",\r\n        \"associateWithQoSPolicy\": <Optional Boolean true or false>,\r\n\t\t\"enableSnapMirrorReplication\": <Optional Boolean true or false>,\r\n        \"fifoSize\": \"<Optional maximum number of FIFO (First-In-First-Out) snapshots supported by the volume. Note that FIFO and non-FIFO snapshots both use the same pool of available snapshot slots on a volume. Use this option to limit FIFO snapshot consumption of the available snapshot slots. If unspecified, a default value of 24 will be used>\",\r\n        \"minFifoSize\": \"<Optional number of snapshot slots that are reserved for only FIFO (First-In-First-Out) snapshots. Since FIFO and non-FIFO snapshots share the same pool, the 'minFifoSize' reduces the total number of possible non-FIFO snapshots by the same amount. If unspecified, a default value of 0 will be used>\",\r\n    },\r\n    \"id\": 1\r\n}"
              CreateVolumeAccessGroup:
                value: "{\r    \"method\": \"CreateVolumeAccessGroup\",\r    \"params\": {\r        \"name\": \"<Volume Access Group Name>\",\r        \"initiators\": [<CSV List of Initiator IDs (integers) or Quoted IQNs or WWPNs (strings, deprecated)>],\r        \"volumes\": [<CSV List of Volume IDs>],\r        \"attributes\": {}\r    },\r    \"id\": 1\r}"
              DeleteGroupSnapshot:
                value: "{\r    \"method\": \"DeleteGroupSnapshot\",\r    \"params\": {\r        \"groupSnapshotID\": <Group Snapshot ID>,\r        \"saveMembers\": <Boolean true or false>\r    },\r    \"id\": 1\r}"
              DeleteInitiators:
                value: "{\r    \"method\": \"DeleteInitiators\",\r    \"params\": {\r        \"initiators\": [<CSV List of InitiatorIDs to Delete>]\r    },\r    \"id\": 1\r}"
              DeleteKeyProviderKmip:
                value: "{\r    \"method\": \"DeleteKeyProviderKmip\",\r    \"params\": {\r        \"keyProviderID\": <ID of the Key Provider to be Deleted>\r    },\r    \"id\": 1\r}"
              DeleteKeyServerKmip:
                value: "{\r    \"method\": \"DeleteKeyServerKmip\",\r    \"params\": {\r        \"keyServerID\": <ID of the Key Server to be Deleted>\r    },\r    \"id\": 1\r}"
              DeleteQoSPolicy:
                value: "{\r    \"method\": \"DeleteQoSPolicy\",\r    \"params\": {\r        \"qosPolicyID\": <QoS Policy ID>\r    },\r    \"id\": 1\r}"
              DeleteSnapshot:
                value: "{\r    \"method\": \"DeleteSnapshot\",\r    \"params\": {\r        \"snapshotID\": <Snapshot ID>\r    },\r    \"id\": 1\r}"
              DeleteStorageContainers:
                value: "{\r    \"method\": \"DeleteStorageContainers\",\r    \"params\": {\r        \"storageContainerIDs\": [<CSV List of Storage Container IDs to Delete>]\r    },\r    \"id\": 1\r}"
              DeleteVolume:
                value: "{\r    \"method\": \"DeleteVolume\",\r    \"params\": {\r        \"volumeID\": <Volume ID>\r    },\r    \"id\": 1\r}"
              DeleteVolumeAccessGroup:
                value: "{\r    \"method\": \"DeleteVolumeAccessGroup\",\r    \"params\": {\r        \"volumeAccessGroupID\": <Volume Access Group ID>,\r        \"deleteOrphanInitiators\": <Delete Initator Objects When Removed from Volume Access Group: Boolean true or false>,\r        \"force\": <Boolean true or false>\r    },\r    \"id\": 1\r}"
              DeleteVolumes:
                value: "{\r    \"method\": \"DeleteVolumes\",\r    \"params\": {\r        \"volumeIDs\": [<Optional CSV List of Volume IDs>],\r        \"accountIDs\": [<Optional CSV List of Account IDs: All Volumes from These Accounts are Deleted>],\r        \"volumeAccessGroupIDs\": [<Optional CSV List of Volume Access Group IDs: all Volumes from These Volume Access Groups are Deleted>]\r    },\r    \"id\": 1\r}"
              DisableMaintenanceMode:
                value: "{\r\n    \"method\": \"DisableMaintenanceMode\",\r\n    \"params\": {\r\n        \"nodes\": [<CSV List of Node IDs.  Note: Currently only a single node can be in maintenance mode>]\r\n    },\r\n    \"id\": 1\r\n}"
              EnableBmcColdReset:
                value: "{\n\t\"method\": \"EnableBmcColdReset\",\n    \"params\": {\n    \t\"timeout\": <Time in minutes until the next BMC reset>\n    },\n    \"id\": 1\n}"
              EnableEncryptionAtRest:
                value: "{\n\t\"method\": \"EnableEncryptionAtRest\",\n    \"params\": {\n    \t\"keyProviderID\": <Optional ID of Key Provider for KMIP>\n    },\n    \"id\": 1\n}"
              EnableMaintenanceMode:
                value: "{\r\n    \"method\": \"EnableMaintenanceMode\",\r\n    \"params\": {\r\n        \"nodes\": [<CSV List of Node IDs.  Note: Currently only a single node can be in maintenance mode>],\r\n        \"timeout\": \"<Optional timeout in HH:MM:SS format.  Default is no timeout>\"\r\n        \"preMinutePrimarySwapLimit\": <Optional integer number of primaries to move per minute>,\r\n        \"forceWithUnresolvedFaults\": <Optional boolean true or false>\r\n    },\r\n    \"id\": 1\r\n}"
              EnableSnmp:
                value: "{\n\t\"method\": \"EnableSnmp\",\n    \"params\": {\n        \"snmpV3Enabled\": <Boolean true or false>\n    },\n    \"id\": 1\n}"
              GetAccountByID:
                value: "{\n\t\"method\": \"GetAccountByID\",\n    \"params\": {\n        \"accountID\": <Account ID>\n    },\n    \"id\": 1\n}"
              GetAccountEfficiency:
                value: "{\n\t\"method\": \"GetAccountEfficiency\",\n    \"params\": {\n        \"accountID\": <Account ID>\n    },\n    \"id\": 1\n}"
              GetAsyncResult:
                value: "{\n\t\"method\": \"GetAsyncResult\",\n    \"params\": {\n        \"asyncHandle\": <Async Handle ID>\n    },\n    \"id\": 1\n}"
              GetBackupTarget:
                value: "{\n\t\"method\": \"GetBackupTarget\",\n    \"params\": {\n        \"backupTargetID\": <Backup Target ID>\n    },\n    \"id\": 1\n}"
              GetDriveHardwareInfo:
                value: "{\n\t\"method\": \"GetDriveHardwareInfo\",\n    \"params\": {\n        \"driveID\": <Drive ID>\n    },\n    \"id\": 1\n}"
              GetDriveStats:
                value: "{\n\t\"method\": \"GetDriveStats\",\n    \"params\": {\n        \"driveID\": <Drive ID>\n    },\n    \"id\": 1\n}"
              GetKeyProviderKmip:
                value: "{\r    \"method\": \"GetKeyProviderKmip\",\r    \"params\": {\r    \t\"keyProviderID\": <ID of the Key Provider to Return>\r    },\r    \"id\": 1\r}"
              GetKeyServerKmip:
                value: "{\r    \"method\": \"GetKeyServerKmip\",\r    \"params\": {\r    \t\"keyServerID\": <ID of the Key Server to Return>\r    },\r    \"id\": 1\r}"
              GetNodeHardwareInfo:
                value: "{\n\t\"method\": \"GetNodeHardwareInfo\",\n    \"params\": {\n        \"nodeID\": <Node ID>\n    },\n    \"id\": 1\n}"
              GetNodeStats:
                value: "{\n\t\"method\": \"GetNodeStats\",\n    \"params\": {\n        \"nodeID\": <Node ID>\n    },\n    \"id\": 1\n}"
              GetQoSPolicy:
                value: "{\n\t\"method\": \"GetQoSPolicy\",\n    \"params\": {\n        \"qosPolicyID\": <QoS Policy ID>\n    },\n    \"id\": 1\n}"
              GetSchedule:
                value: "{\n\t\"method\": \"GetSchedule\",\n    \"params\": {\n        \"scheduleID\": <Schedule ID>\n    },\n    \"id\": 1\n}"
              GetStorageContainerEfficiency:
                value: "{\r    \"method\": \"GetStorageContainerEfficiency\",\r    \"params\": {\r        \"storageContainerID\": <ID of Storage Container>\r    },\r    \"id\": 1\r}"
              GetVolumeAccessGroupEfficiency:
                value: "{\n\t\"method\": \"GetVolumeAccessGroupEfficiency\",\n    \"params\": {\n        \"volumeAccessGroupID\": <Volume Access Group ID>\n    },\n    \"id\": 1\n}"
              GetVolumeAccessGroupLunAssignments:
                value: "{\n\t\"method\": \"GetVolumeAccessGroupLunAssignments\",\n    \"params\": {\n        \"volumeAccessGroupID\": <Volume Access Group ID>\n    },\n    \"id\": 1\n}"
              GetVolumeEfficiency:
                value: "{\n\t\"method\": \"GetVolumeEfficiency\",\n    \"params\": {\n        \"volumeID\": <Volume ID>\n    },\n    \"id\": 1\n}"
              GetVolumeStats:
                value: "{\n\t\"method\": \"GetVolumeStats\",\n    \"params\": {\n        \"volumeID\": <Volume ID>\n    },\n    \"id\": 1\n}"
              ListAccounts:
                value: "{\n\t\"method\": \"ListAccounts\",\n    \"params\": {\n        \"startAccountID\": <Optional Account ID to start listing>,\n        \"limit\": <Optional Number of accounts to return>,\n        \"includeStorageContainers\": <Boolean true or false>\n    },\n    \"id\": 1\n}"
              ListActiveVolumes:
                value: "{\n\t\"method\": \"ListActiveVolumes\",\n    \"params\": {\n        \"startVolumeID\": <Optional Starting Volume ID>,\n        \"limit\": <Optional Maximum Number of Volumes to Return>,\n        \"includeVirtualVolumes\": <Boolean true or false>\n    },\n    \"id\": 1\n}"
              ListClusterFaults:
                value: "{\n\t\"method\": \"ListClusterFaults\",\n    \"params\": {\n    \t\"bestPractices\": <Optionally include best practices faults: Boolean true or false>,\n        \"faultTypes\": \"<Optional: current, resolved or all>\"\n    },\n    \"id\": 1\n}"
              ListDeletedVolumes:
                value: "{\n\t\"method\": \"ListDeletedVolumes\",\n    \"params\": {\n    \t\"includeVirtualVolumes\": <Boolean true or false>\n    },\n    \"id\": 1\n}"
              ListDriveStats:
                value: "{\n\t\"method\": \"ListDriveStats\",\n    \"params\": {\n        \"drives\": [<Optional CSV List of Drive IDs>]\n    },\n    \"id\": 1\n}"
              ListEvents:
                value: "{\n\t\"method\": \"ListEvents\",\n    \"params\": {\n        \"startEventID\": <Optional First Event ID to Return>,\n        \"endEventID\": <Optional Last Event ID to Return [Default Unlimited]>,\n        \"maxEvents\": <Optional number of events to return>\n    },\n    \"id\": 1\n}"
              ListGroupSnapshots:
                value: "{\n\t\"method\": \"ListGroupSnapshots\",\n    \"params\": {\n        \"volumes\": [<CSV List of Volumes to Include>]\n    },\n    \"id\": 1\n}"
              ListInitiators:
                value: "{\n\t\"method\": \"ListInitiators\",\n    \"params\": {\n        \"startInitiatorID\": <Optional Starting Initiator ID>,\n        \"limit\": <Optional Maximum Number of Initiators to Return>,\n        \"initiators\": [<Optional CSV List of Initiator IDs>]\n    },\n    \"id\": 1\n}"
              ListKeyProvidersKmip:
                value: "{\r    \"method\": \"ListKeyProvidersKmip\",\r    \"params\": {\r    \t\"keyProviderIsActive\": <Optional Boolean True or False>,\r    \t\"kmipKeyProviderHasServerAssigned\": <Optional Boolean True or False>\r    },\r    \"id\": 1\r}"
              ListKeyServersKmip:
                value: "{\r    \"method\": \"ListKeyServersKmip\",\r    \"params\": {\r    \t\"keyProviderID\": <Optional Key Provider ID>,\r    \t\"kmipAssignedProviderIsActive\": <Optional Boolean True or False>,\r    \t\"kmipHasProviderAssigned\": <Optional Boolean True or False>\r    },\r    \"id\": 1\r}"
              ListSnapshots:
                value: "{\n\t\"method\": \"ListSnapshots\",\n    \"params\": {\n        \"volumeID\": <Optional Volume ID>,\n        \"snapshotID\": <Optional Snapshot ID>\n    },\n    \"id\": 1\n}"
              ListVirtualNetworks:
                value: "{\n\t\"method\": \"ListVirtualNetworks\",\n    \"params\": {\n        \"virtualNetworkID\": <Optional Virtual Network ID>,\n        \"virtualNetworkTag\": <Optional Virtual Network Tag>,\n        \"virtualNetworkIDs\": [<Optional CSV List of Virtual Network IDs>],\n        \"virtualNetworkTags\": [<Optional CSV List of Virtual Network Tags>]\n    },\n    \"id\": 1\n}"
              ListVirtualVolumes:
                value: "{\n\t\"method\": \"ListVirtualVolumes\",\n    \"params\": {\n    \t\"details\": <Include more details about each Virtual Volume: true or false (Default = false)>,\n    \t\"limit\": <Optional max number of results>,\n    \t\"recursive\": <Include VVol children information: true or false (Default = false)>,\n    \t\"startVirtualVolumeID\": \"<Optional ID of Virtual Volume at Which to Begin List>\",\n    \t\"virtualVolumeIDs\": [\"Optional CSV List of Virtual Volume IDs\"]\n    },\n    \"id\": 1\n}"
              ListVolumeQoSHistograms:
                value: "{\n\t\"method\": \"ListVolumeQoSHistograms\",\n    \"params\": {\n        \"volumeIDs\": [<Optional CSV List of Volume IDs>]\n    },\n    \"id\": 1\n}"
              ListVolumeStats:
                value: "{\n\t\"method\": \"ListVolumeStats\",\n    \"params\": {\n        \"volumeIDs\": [<Optional CSV List of Volume IDs>],\n        \"includeVirtualVolumes\": <Boolean true or false>\n    },\n    \"id\": 1\n}"
              ListVolumeStatsByAccount:
                value: "{\n\t\"method\": \"ListVolumeStatsByAccount\",\n    \"params\": {\n    \t\"includeVirtualVolumes\": <Boolean true or false>\n    },\n    \"id\": 1\n}"
              ListVolumeStatsByVirtualVolume:
                value: "{\n\t\"method\": \"ListVolumeStatsByVirtualVolume\",\n    \"params\": {\n        \"virtualVolumeIDs\": [<Optional CSV List of Virtual Volume IDs>]    \n    },\n    \"id\": 1\n}"
              ListVolumeStatsByVolume:
                value: "{\n\t\"method\": \"ListVolumeStatsByVolume\",\n    \"params\": {\n    \t\"includeVirtualVolumes\": <Boolean true or false>\n    },\n    \"id\": 1\n}"
              ListVolumeStatsByVolumeAccessGroup:
                value: "{\n\t\"method\": \"ListVolumeStatsByVolumeAccessGroup\",\n    \"params\": {\n    \t\"includeVirtualVolumes\": <Boolean true or false>\n    },\n    \"id\": 1\n}"
              ListVolumes (by startVolumeID):
                value: "{\n\t\"method\": \"ListVolumes\",\n    \"params\": {\n        \"startVolumeID\": <Optional Starting Volume ID>,\n        \"accounts\": [<List of accountIDs>],\n        \"isPaired\": <Return paired volumes: true, Return unpaired volumes: false>,\n        \"volumeStatus\": \"<creating, snapshotting, active, or deleted>\",\n        \"limit\": <Optional Maximum Number of Volumes to Return>,\n        \"volumeName\": \"<Optional Volume Name>\"\n    },\n    \"id\": 1\n}"
              ListVolumes (by volumeIDs):
                value: "{\n\t\"method\": \"ListVolumes\",\n    \"params\": {\n        \"volumeIDs\": [<A list of volumeIDs>],\n        \"volumeName\": \"<Optional Volume Name>\",\n        \"isPaired\": <Return paired volumes: true, Return unpaired volumes: false>,\n        \"volumeStatus\": \"<creating, snapshotting, active, or deleted>\",\n        \"volumeName\": \"<Optional Volume Name>\",\n        \"includeVirtualVolumes\": <Boolean true or false>\n    },\n    \"id\": 1\n}"
              ListVolumesForAccount:
                value: "{\n\t\"method\": \"ListVolumesForAccount\",\n    \"params\": {\n        \"accountID\": <Account ID>,\n        \"includeVirtualVolumes\": <Boolean true or false>\n    },\n    \"id\": 1\n}"
              ModifyAccount:
                value: "{\r\n    \"method\": \"ModifyAccount\",\r\n    \"params\": {\r\n        \"accountID\": <Account ID>,\r\n        \"username\": \"<Optional New Username>\",\r\n        \"enableChap\": <Optional Boolean true or false; default true>,\r\n        \"status\": \"<Optional Account Status>\",\r\n        \"initiatorSecret\": \"<Optional Initiator Secret>\",\r\n        \"targetSecret\": \"<Optional Target Secret>\",\r\n        \"attributes\": {}\r\n    },\r\n    \"id\": 1\r\n}"
              ModifyBackupTarget:
                value: "{\r    \"method\": \"ModifyBackupTarget\",\r    \"params\": {\r        \"backupTargetID\": <Backup Target ID>,\r        \"name\": \"<Optional New Backup Target Name>\",\r        \"attributes\": {<Optional Updated Backup Target Parameters>}\r    },\r    \"id\": 1\r}"
              ModifyClusterAdmin:
                value: "{\r    \"method\": \"ModifyClusterAdmin\",\r    \"params\": {\r        \"clusterAdminID\": <Cluster Admin ID>,\r        \"access\": [<CSV list of quoted access levels or \"administrator\" for all>],\r        \"password\": \"<Optional Cluster Admin Password>\"\r    },\r    \"id\": 1\r}"
              ModifyClusterFullThreshold:
                value: "{\r    \"method\": \"ModifyClusterFullThreshold\",\r    \"params\": {\r        \"stage2AwareThreshold\": <Number of Nodes of Capacity Remaining Before Warning>,\r        \"stage3BlockThresholdPercent\": <Percentage of Block Storage Usage Below the Error Threshold Before Warning>,\r        \"maxMetadataOverProvisionFactor\": <Optional Metadata Multiplier Times Actual Space Available>\r    },\r    \"id\": 1\r}"
              ModifyGroupSnapshot:
                value: "{\r\n    \"method\": \"ModifyGroupSnapshot\",\r\n    \"params\": {\r\n        \"groupSnapshotID\": <Group Snapshot ID>,\r\n\t\t\"name\": \"<Optional Group Snapshot Name>\",\r\n        \"enableRemoteReplication\": <Optional Boolean true or false>,\r\n        \"expirationTime\": \"<Optional amount of time to retain the snapshot in ISO 8601 format. A value of 'null' causes the snapshot to be retained permamently. A value of 'fifo' causes the snapshot to be preserved on a First-In-First-Out (FIFO) basis, relative to other FIFO snapshots on the volume. The API will fail if no FIFO space is available>\",\r\n    },\r\n    \"id\": 1\r\n}"
              ModifyInitiators:
                value: "{\r\n    \"method\": \"ModifyInitiators\",\r\n    \"params\": {\r\n        \"initiators\": [\r\n        \t{\r\n        \t\t\"initiatorID\": <Initiator ID>,\r\n        \t\t\"alias\": \"<Optional Friendly Name for Initiator>\",\r\n            \t\"chapUsername\": \"<Optional CHAP Username>\",\r\n            \t\"initiatorSecret\": \"<Optional CHAP initiator secret>\",\r\n            \t\"targetSecret\": \"<Optional CHAP target secret>\",\r\n            \t\"requireChap\": <Boolean true or false>,\r\n\t\t\t\t\"virtualNetworkIDs\": [<Optional CSV list of VirtualNetwork IDs, Leave Empty for All Networks>],\r\n            \t\"volumeAccessGroupID\": <Optional ID of Destination AG for Initiator>,\r\n            \t\"attributes\": {}\r\n        \t}\r\n        ]\r\n    },\r\n    \"id\": 1\r\n}"
              ModifyKeyServerKmip:
                value: "{\n\t\"method\": \"ModifyKeyServerKmip\",\n    \"params\": {\n    \t\"keyServerID\": <ID ofthe Key Server to Modify>,\n    \t\"kmipCaCertificate\": \"<Optional Public key certificate of the external key server’s root CA>\",\n    \t\"kmipClientCertificate\": \"<Optional PEM PKCS#10 X.509 certificate>\",\n    \t\"kmipKeyServerHostnames\": [<Optional Array of strings with IP or Hostname of Key Servers>],\n    \t\"kmipKeyServerName\": \"<Optional Name of the KMIP Key Server>\",\n    \t\"kmipKeyServerPort\": \"<Optional key server port, default is 5696>\"\n    },\n    \"id\": 1\n}"
              ModifyQoSPolicy:
                value: "{\r    \"method\": \"ModifyQoSPolicy\",\r    \"params\": {\r    \t\"qosPolicyID\": <QoS Policy ID>,\r        \"name\": \"<Optional Name of QoS Policy>\",\r        \"qos\": {\r            \"minIOPS\": <Optional Minimum IOPS>,\r            \"maxIOPS\": <Optional Maximum IOPS>,\r            \"burstIOPS\": <Optional Burst IOPS>\r        }\r    },\r    \"id\": 1\r}"
              ModifySchedule:
                value: "{\r\n    \"method\": \"ModifySchedule\",\r\n    \"params\": {\r\n        \"attributes\": {\r\n            \"frequency\": \"<One of: Time Interval, Days of Week, Days of Month>\"\r\n        },\r\n        \"hours\": \"<Optional Hours between snapshots, used for Time Interval mode>\",\r\n        \"minutes\": \"<Optional Minutes between snapshots, used for Time Interval mode>\",\r\n        \"paused\": <Optional Boolean true or false>,\r\n        \"recurring\": <Optional Boolean true or false>,\r\n        \"runNextInterval\": <Optional Boolean true or false>,\r\n        \"scheduleID\": \"<The ID of the schedule being modified>\",\r\n        \"scheduleName\": \"<Name for the schedule>\",\r\n        \"scheduleType\": \"snapshot\",\r\n        \"scheduleInfo\": {\r\n            \"volumeID\": \"<Optional Volume ID to be snapped>\",\r\n            \"volumes\": [<Optional CSV List of Volume IDs to be group snapped>],\r\n            \"name\": \"<Optional Name of the snapshot>\",\r\n            \"enableRemoteReplication\": <Optional Boolean true or false>,\r\n            \"retention\": \"<Optional amount of time to retain the snapshot in HH:mm:ss. If empty the snapshot is retained forever>\",\r\n\t\t\t\"fifo\": \"<Optional the snapshot to be preserved on a First-In-First-Out (FIFO) basis>\",\r\n\t\t\t\"ensureSerialCreation\": \"<Optional specify if a new snapshot creation should be allowed if a previous snapshot replication is in progress>\",\r\n        },\r\n        \"startingDate\": \"<Optional Starting Date in ISO 8601 Format>\",\r\n        \"toBeDeleted\": <Optional Boolean true or false>,\r\n        \"monthdays\": [<Optional CSV List of days to run>],\r\n        \"weekdays\": [\r\n            {\"day\": <Day Number>, \"offset\": 1},\r\n            {\"day\": <Day Number>, \"offset\": 1}\r\n        ]\r\n    },\r\n    \"id\": 1\r\n}"
              ModifySnapshot:
                value: "{\r\n    \"method\": \"ModifySnapshot\",\r\n    \"params\": {\r\n        \"snapshotID\": <Snapshot ID>,\r\n\t\t\"name\": \"<Optional snapshot name>\",\r\n\t\t\"snapMirrorLabel\": \"<Optional label used by SnapMirror software to specify snapshot retention policy on a SnapMirror endpoint>\",\r\n        \"enableRemoteReplication\": <Optional Boolean true or false>,\r\n        \"expirationTime\": \"<Optional amount of time to retain the snapshot in ISO 8601 format. A value of 'null' causes the snapshot to be retained permamently. A value of 'fifo' causes the snapshot to be preserved on a First-In-First-Out (FIFO) basis, relative to other FIFO snapshots on the volume. The API will fail if no FIFO space is available>\",\r\n    },\r\n    \"id\": 1\r\n}"
              ModifyStorageContainer:
                value: "{\r    \"method\": \"ModifyStorageContainer\",\r    \"params\": {\r        \"storageContainerID\": <Storage Container ID>,\r        \"initiatorSecret\": \"<Optional CHAP Secret for Initiator>\",\r        \"targetSecret\": \"<Optional CHAP Secret for Target>\"       \t\r        }\r    },\r    \"id\": 1\r}"
              ModifyVirtualNetwork (by ID):
                value: "{\n    \"method\": \"ModifyVirtualNetwork\",\n    \"params\": {\n    \t\"virtualNetworkID\": <Virtual Network ID>,\n        \"name\": \"<Optional Virtual Network Name>\",\n        \"addressBlocks\": [\n            {\n                \"start\": \"<Optional Starting IP Address>\",\n                \"size\": <Optional Block Size>\n            }\n        ],\n        \"netmask\": \"<Optional Netmask>\",\n        \"gateway\": \"<Optional Gateway IP Address>\",\n        \"svip\": \"<Optional SVIP>\",\n        \"attributes\": {}\n    },\n    \"id\": 1\n}"
              ModifyVirtualNetwork (by Tag):
                value: |-
                  {
                      "method": "ModifyVirtualNetwork",
                      "params": {
                          "virtualNetworkTag": <Virtual Network/VLAN Tag>,
                          "name": "<Optional Virtual Network Name>",
                          "addressBlocks": [
                              {
                                  "start": "<Optional Starting IP Address>",
                                  "size": <Optional Block Size>
                              }
                          ],
                          "netmask": "<Optional Netmask>",
                          "gateway": "<Optional Gateway IP Address>",
                          "svip": "<Optional SVIP>",
                          "attributes": {}
                      },
                      "id": 1
                  }
              ModifyVolume:
                value: "{\r\n    \"method\": \"ModifyVolume\",\r\n    \"params\": {\r\n        \"volumeID\": <Volume ID>,\r\n        \"accountID\": <Optional New Account ID for Volume>,\r\n        \"totalSize\": <Optional New Volume Size in Bytes>,\r\n        \"setCreateTime\": \"<Optional Boolean true or false. Set New Creation Time for the Volume>\",\r\n        \"createTime\": \"<Optional New Creation Time for the Volume if setCreateTime is true>\",\r\n        \"access\": {\r\n\t\t\t\"readOnly\": \"<Optional Only read operations allowed>\",\r\n\t\t\t\"readWrite\": \"<Optional Read and writes are allowed>\",\r\n\t\t\t\"locked\": \"<Optional No reads or writes are allowed. if not specified, the access value does not change>\",\r\n\t\t\t\"replicationTarget\": \"<Optional Identify a volume as the target volume for a paired set of volumes. If the volume is not paired, the access status is locked. If a value is not specified, the access value does not change>\",\r\n\t\t\t\"snapMirrorTarget\": \"<Optional Identify a volume as the target volume for SnapMirror replicatio>\"\r\n\t\t},\r\n        \"qos\": {\r\n            \"minIOPS\": <Optional Minimum IOPS>,\r\n            \"maxIOPS\": <Optional Maximum IOPS>,\r\n            \"burstIOPS\": <Optional Burst IOPS>,\r\n            \"burstTime\": 60\r\n        },\r\n\t\t\"mode\": {\r\n            \"sync\":  \"<Optional Waits for system to ackowledge hat data is stored on source before writing to the target>\",\r\n            \"async\": \"<Optional Does not wait for data transmission ackowledgment from the source to begin writing data to the target>\"\r\n        },\r\n        \"qosPolicyID\": <Optional QoS Policy ID>,\r\n        \"associateWithQoSPolicy\": \"<Optional Boolean true or false. If 'true', associate the volume with the QoS policy specified in the QoSPolicyID parameter. If 'false', do not assosciate the volume with the QoS policy specified in the QoSPolicyID parameter. When 'false', any existing policy association is removed regardless of whether you specify a QoS policy in the 'qosPolicyID' parameter>\",\r\n        \"enableSnapMirrorReplication\": <Optional Boolean true or false>,\r\n        \"fifoSize\": \"<Optional maximum number of FIFO (First-In-First-Out) snapshots supported by the volume. Note that FICO and non-FICO snapshots both use the same pool of available snapshot slots on a volume. Use this option to limit FIFO snapshot consumption of the available snapshot slots. You cannot modify this value to be less than the current FIFO snapshot count>\",\r\n\t\t\"minFifoSize\": \"<Optional number of snapshot slots that are reserved for only FIFO (First-In-First-Out) snapshots. Since FIFO and non-FIFO snapshots share the same pool, the 'minFifoSize' reduces the total number of possible non-FIFO snapshots by the same amount. You cannot modify this value so that it conflicts  with the current non-FIFO snapshot count>\",\r\n\t\t\"attributes\": {},\r\n    },\r\n    \"id\": 1\r\n}"
              ModifyVolumeAccessGroup:
                value: "{\r    \"method\": \"ModifyVolumeAccessGroup\",\r    \"params\": {\r        \"volumeAccessGroupID\": <Volume Access Group ID>,\r        \"name\": \"<Optional Volume Access Group Name>\",\r        \"initiators\": [\r            <CSV List of Initiator IDs (integers) or Quoted IQNs or WWPNs (strings, deprecated)>\r        ],\r        \"deleteOrphanInitiators\": <Delete initiator objects After Removal from Volume Access Group: true or false>,\r        \"volumes\": [\r            <Optional CSV List of Volume IDs>\r        ],\r        \"attributes\": {}\r    },\r    \"id\": 1\r}"
              ModifyVolumeAccessGroupLunAssignments:
                value: "{\r    \"method\": \"ModifyVolumeAccessGroupLunAssignments\",\r    \"params\": {\r        \"volumeAccessGroupID\": <Volume Access Group ID>,\r        \"lunAssignments\": [\r            { \"volumeID\": <Volume ID>, \"lun\": <LUN ID> },\r            { \"volumeID\": <Volume ID>, \"lun\": <LUN ID> },\r            { \"volumeID\": <Volume ID>, \"lun\": <LUN ID> }\r        ]\r    },\r    \"id\": 1\r}"
              ModifyVolumePair:
                value: "{\r    \"method\": \"ModifyVolumePair\",\r    \"params\": {\r        \"volumeID\": <Volume ID>,\r        \"pausedManual\": <Boolean true or false>,\r        \"mode\": \"<Volume Replication Mode: Async, Sync, or SnapshotsOnly>\"\r    },\r    \"id\": 1\r}"
              ModifyVolumes:
                value: "{\r\n    \"method\": \"ModifyVolumes\",\r\n    \"params\": {\r\n        \"volumeIDs\": [<CSV List of Volume IDs to Modify>],\r\n        \"accountID\": <Optional New Account ID for Volumes>,\r\n        \"totalSize\": <Optional New Volume Size in Bytes>,\r\n        \"setCreateTime\": <true to Set New Creation Time for the Volumes>,\r\n        \"createTime\": \"<Optional New Creation Time for the Volumes if setCreateTime is true>\",\r\n        \"access\": {\r\n\t\t\t\"readOnly\": \"<Optional Only read operations allowed>\",\r\n\t\t\t\"readWrite\": \"<Optional Read and writes are allowed>\",\r\n\t\t\t\"locked\": \"<Optional No reads or writes are allowed. if not specified, the access value does not change>\",\r\n\t\t\t\"replicationTarget\": \"<Optional Identify a volume as the target volume for a paired set of volumes. If the volume is not paired, the access status is locked. If a value is not specified, the access value does not change>\"\r\n\t\t},\r\n        \"qos\": {\r\n            \"minIOPS\": <Optional Minimum IOPS>,\r\n            \"maxIOPS\": <Optional Maximum IOPS>,\r\n            \"burstIOPS\": <Optional Burst IOPS>,\r\n            \"burstTime\": 60\r\n        },\r\n\t\t\"mode\": {\r\n            \"sync\":  \"<Optional Waits for system to ackowledge hat data is stored on source before writing to the target>\",\r\n            \"async\": \"<Optional Does not wait for data transmission ackowledgment from the source to begin writing data to the target>\"\r\n        },\r\n        \"qosPolicyID\": <Optional QoS Policy ID>,\r\n\t\t\"associateWithQoSPolicy\": \"<Optional Boolean true or false. If 'true', associate the volume with the QoS policy specified in the QoSPolicyID parameter. If 'false', do not assosciate the volume with the QoS policy specified in the QoSPolicyID parameter. When 'false', any existing policy association is removed regardless of whether you specify a QoS policy in the 'qosPolicyID' parameter>\",\r\n        \"enableSnapMirrorReplication\": <Optional Boolean true or false>,\r\n\t\t\"fifoSize\": \"<Optional maximum number of FIFO (First-In-First-Out) snapshots supported by the volume. Note that FICO and non-FICO snapshots both use the same pool of available snapshot slots on a volume. Use this option to limit FIFO snapshot consumption of the available snapshot slots. You cannot modify this value to be less than the current FIFO snapshot count>\",\r\n\t\t\"minFifoSize\": \"<Optional number of snapshot slots that are reserved for only FIFO (First-In-First-Out) snapshots. Since FIFO and non-FIFO snapshots share the same pool, the 'minFifoSize' reduces the total number of possible non-FIFO snapshots by the same amount. You cannot modify this value so that it conflicts  with the current non-FIFO snapshot count>\",\r\n\t\t\"attributes\": {},\r\n\t},\r\n    \"id\": 1\r\n}"
              PurgeDeletedVolume:
                value: "{\r    \"method\": \"PurgeDeletedVolume\",\r    \"params\": {\r        \"volumeID\": <Volume ID>\r    },\r    \"id\": 1\r}"
              PurgeDeletedVolumes:
                value: "{\r    \"method\": \"PurgeDeletedVolumes\",\r    \"params\": {\r        \"volumeIDs\": [<Optional List of Volume IDs to Purge>],\r        \"accountIDs\": [<Optional List of Account IDs to Purge From>],\r        \"volumeAccessGroupIDs\": [<Optional list of Volume Access Group IDs to Purge From>]\r    },\r    \"id\": 1\r}"
              RekeySoftwareEncryptionAtRestMasterKey:
                value: "{\r\n    \"method\": \"RekeySoftwareEncryptionAtRestMasterKey\",\r\n    \"params\": {\r\n        \"keyManagementType: \"<Optional Internal or External Key Management used to manage the Master Key>\",\r\n        \"keyProviderID\": \"<Optional Key Provider ID>\",\r\n},\r\n\"id\": 1"
              RemoveAccount:
                value: "{\r    \"method\": \"RemoveAccount\",\r    \"params\": {\r        \"accountID\": <Account ID>\r    },\r    \"id\": 1\r}"
              RemoveBackupTarget:
                value: "{\r    \"method\": \"RemoveBackupTarget\",\r    \"params\": {\r        \"backupTargetID\": <Backup Target ID>\r    },\r    \"id\": 1\r}"
              RemoveClusterAdmin:
                value: "{\r    \"method\": \"RemoveClusterAdmin\",\r    \"params\": {\r        \"clusterAdminID\": <Cluster Admin ID>\r    },\r    \"id\": 1\r}"
              RemoveClusterPair:
                value: "{\r    \"method\": \"RemoveClusterPair\",\r    \"params\": {\r        \"clusterPairID\": <Cluster Pair ID>\r    },\r    \"id\": 1\r}"
              RemoveDrives:
                value: "{\r    \"method\": \"RemoveDrives\",\r    \"params\": {\r        \"drives\": [<CSV List of Drive IDs>],\r        \"forceDuringBinSync\": <Optional boolean true or false>\r    },\r    \"id\": 1\r}"
              RemoveInitiatorsFromVolumeAccessGroup:
                value: "{\r    \"method\": \"RemoveInitiatorsFromVolumeAccessGroup\",\r    \"params\": {\r        \"volumeAccessGroupID\": <Volume Access Group ID>,\r        \"initiators\": [<CSV List of Initiator IDs (integers) or Quoted IQNs or WWPNs (strings, deprecated)>],\r        \"deleteOrphanInitiators\": <Delete initiator objects After Removal from Volume Access Group: true or false>\r    },\r    \"id\": 1\r}"
              RemoveKeyServerFromProviderKmip:
                value: "{\n\t\"method\": \"RemoveKeyServerFromProviderKmip\",\n    \"params\": {\n    \t\"keyServerID\": <ID of the Key Server to Unassign>\n    },\n    \"id\": 1\n}"
              RemoveNodes:
                value: "{\r    \"method\": \"RemoveNodes\",\r    \"params\": {\r        \"nodes\": [<CSV List of Node IDs>]\r    },\r    \"id\": 1\r}"
              RemoveVirtualNetwork (by ID):
                value: "{\r    \"method\": \"RemoveVirtualNetwork\",\r    \"params\": {\r        \"virtualNetworkID\": <Virtual Network ID>\r    },\r    \"id\": 1\r}"
              RemoveVirtualNetwork (by Tag):
                value: "{\r    \"method\": \"RemoveVirtualNetwork\",\r    \"params\": {\r        \"virtualNetworkTag\": <Virtual Network/VLAN Tag>\r    },\r    \"id\": 1\r}"
              RemoveVolumePair:
                value: "{\r    \"method\": \"RemoveVolumePair\",\r    \"params\": {\r        \"volumeID\": <Volume ID>\r    },\r    \"id\": 1\r}"
              RemoveVolumesFromVolumeAccessGroup:
                value: "{\r    \"method\": \"RemoveVolumesFromVolumeAccessGroup\",\r    \"params\": {\r        \"volumeAccessGroupID\": <Volume Access Group ID>,\r        \"volumes\": [<CSV List of Volume IDs>]\r    },\r    \"id\": 1\r}"
              ResetNode:
                value: "{\r    \"method\": \"ResetNode\",\r    \"params\": {\r        \"force\": true,\r        \"build\": \"<Optional URL of image to build>\",\r        \"options\": {<Optional options to pass to the reset operation>}\r    },\r    \"id\": 1\r}"
              RestoreDeletedVolume:
                value: "{\r    \"method\": \"RestoreDeletedVolume\",\r    \"params\": {\r        \"volumeID\": <Volume ID>\r    },\r    \"id\": 1\r}"
              RollbackToGroupSnapshot:
                value: "{\r    \"method\": \"RollbackToGroupSnapshot\",\r    \"params\": {\r        \"groupSnapshotID\": <Group Snapshot ID>,\r        \"name\": \"<Optional Group Snapshot Name if Saving State>\",\r        \"saveCurrentState\": <Boolean true or false>,\r        \"attributes\": {}\r    },\r    \"id\": 1\r}"
              RollbackToSnapshot:
                value: "{\r    \"method\": \"RollbackToSnapshot\",\r    \"params\": {\r        \"volumeID\": <Volume ID>,\r        \"snapshotID\": <Snapshot ID>,\r        \"name\": \"<Optional Name for the Snapshot if Saving State>\",\r        \"saveCurrentState\": <Boolean true or false>,\r        \"attributes\": {}\r    },\r    \"id\": 1\r}"
              SecureEraseDrives:
                value: "{\r    \"method\": \"SecureEraseDrives\",\r    \"params\": {\r        \"drives\": [<CSV List of Drive IDs>]\r    },\r    \"id\": 1\r}"
              SetClusterConfig:
                value: "{\r    \"method\": \"SetClusterConfig\",\r    \"params\": {\r        \"cluster\": {<JSON Object Indicating Parameters to be Changed>}\r    },\r    \"id\": 1\r}"
              SetClusterStructure:
                value: "{\n\t\"method\":\"SetClusterStructure\",\n    \"params\":{\n\t\t<Cluster Structure Object from GetClusterStructure>\n\t},\n    \"id\": 1\n}"
              SetConfig:
                value: "{\r    \"method\": \"SetConfig\",\r    \"params\": {\r        \"config\": {<JSON Object Indicating Parameters to be Changed>}\r    },\r    \"id\": 1\r}"
              SetDefaultQoS:
                value: "{\n\t\"method\": \"SetDefaultQoS\",\n    \"params\": {\n    \t\"minIOPS\": <Minimum sustained IOPS for the Volume>,\n    \t\"maxIOPS\": <Maximum sustained IOPS for the Volume>,\n    \t\"burstIOPS\": <Maximum IOPS Allowed During Short Burst>\n    },\n    \"id\": 1\n}"
              SetLicenseKey:
                value: "{\n\t\"method\": \"SetLicenseKey\",\n    \"params\": {\n        \"orderNumber\": \"<The sales order number for this cluster.>\",\n        \"serialNumber\" \"<The serial number for this cluster.>\"\n    },\n    \"id\": 1\n}"
              SetLldpConfig:
                value: "{\n\t\"method\":\"SetLldpConfig\",\n    \"params\": {\n        \"lldpConfig\": {\n        \t\"enableLldp\": <Boolean true or false, default true>,\n        \t\"enableMed\": <Boolean true or false, default false>,\n        \t\"enableOtherProtocols\": <Boolean true or false, default true>\n        }\n    }\n}"
              SetLoginBanner:
                value: "{\r    \"method\": \"SetLoginBanner\",\r    \"params\": {\r        \"banner\": \"<Optional login/terms of use banner message>\",\r        \"enabled\": <Optional boolean true or false>\r    },\r    \"id\": 1\r}"
              SetNetworkConfig:
                value: "{\r    \"method\": \"SetNetworkConfig\",\r    \"params\": {\r        \"network\": {<JSON Object Indicating Parameters to be Changed>}\r    },\r    \"id\": 1\r}"
              SetNodeSupplementalTlsCiphers:
                value: |-
                  {
                     "method": "SetNodeSupplementalTlsCiphers",
                     "params": {
                        "supplementalCiphers": [ <CSV List of quoted ciphers from GetSupportedTlsCiphers> ]
                     },
                      "id": 1
                  }
              SetNtpInfo:
                value: "{\r    \"method\": \"SetNtpInfo\",\r    \"params\": {\r        \"servers\": [<CSV List of Quoted NTP Servers>],\r        \"broadcastclient\": <Boolean true or false>\r    },\r    \"id\": 1\r}"
              SetProtectionDomainLayout:
                value: "{\n\t\"method\": \"SetProtectionDomainLayout\",\n    \"params\": {\n    \t\"protectionDomainLayout\": [\n            {\n                \"nodeID\": <ID of Node for this domain>,\n                \"protectionDomains\": [\n                    {\n                        \"protectionDomainName\": \"<Custom protection domain name>\",\n                        \"protectionDomainType\": \"custom\"\n                    }\n                ]\n            },\n            {\n                \"nodeID\": <ID of Node for this domain>,\n                \"protectionDomains\": [\n                    {\n                        \"protectionDomainName\": \"<Custom protection domain name>\",\n                        \"protectionDomainType\": \"custom\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"id\": 1\n}"
              SetRemoteLoggingHosts:
                value: "{\r    \"method\": \"SetRemoteLoggingHosts\",\r    \"params\": {\r        \"remoteHosts\": [\r            {\r                \"host\": \"<IP Address of Remote Logging Host>\",\r                \"port\": <Remote Logging Port Number>\r            },\r            {\r                \"host\": \"<Optional IP Address of Remote Logging Host>\",\r                \"port\": <Optional Remote Logging Port Number>\r            }\r        ]\r    },\r    \"id\": 1\r}"
              SetSnmpACL:
                value: "{\n\t\"method\": \"SetSnmpACL\",\n    \"params\": {\n        \"networks\": [\n            {\n                \"community\": \"<SNMP Community String>\",\n                \"access\": \"<Access Level>\",\n                \"network\": \"<A.B.C.D Network Address>\",\n                \"cidr\": <Integer Representation of CIDR Netmask>\n            },\n            {\n                \"<Optional Additional SNMP Network Object>\"\n            }\n        ],\n        \"usmUsers\": [\n            {\n                \"access\": \"<Access Level>\",\n                \"name\": \"<SNMP User Name>\",\n                \"passphrase\": \"<SNMP User Passphrase>\",\n                \"password\": \"<SNMP User Password>\",\n                \"secLevel\": \"<Security Level>\"\n            }\n        ]\n    },\n    \"id\": 1\n}"
              SetSnmpInfo:
                value: "{\r    \"method\": \"SetSnmpInfo\",\r    \"params\": {\r        \"networks\": [\r            {\r                \"community\": \"<SNMP Community String>\",\r                \"access\": \"<Access Level>\",\r                \"network\": \"<A.B.C.D Network Address>\",\r                \"cidr\": <Integer Representation of CIDR Netmask>\r            },\r            {\r                \"<Optional Additional SNMP Network Object>\"\r            }\r        ],\r        \"usmUsers\": [\r            {\r                \"access\": \"<Access Level>\",\r                \"name\": \"<SNMP User Name>\",\r                \"passphrase\": \"<SNMP User Passphrase>\",\r                \"password\": \"<SNMP User Password>\",\r                \"secLevel\": \"<Security Level>\"\r            }\r        ],\r        \"enabled\": <Boolean true or false>,\r        \"snmpV3Enabled\": <Boolean true or false>\r    },\r    \"id\": 1\r}"
              SetSnmpTrapInfo:
                value: "{ \n    \"method\": \"SetSnmpTrapInfo\",\n    \"params\": {\n        \"trapRecipients\": [\n            {\n                \"host\": \"<SNMP Trap Receiver IP or Hostname>\",\n                \"port\": <SNMP Trap Receiver Port>,\n                \"community\": \"<SNMP Community String>\"\n            },\n            {<Optional Additional SNMP Receiver, Port and Community>}\n        ],\n        \"clusterFaultTrapsEnabled\": <Boolean true or false>,\n        \"clusterFaultResolvedTrapsEnabled\": <Boolean true or false>,\n        \"clusterEventTrapsEnabled\": <Boolean true or false>\n    },\n    \"id\": 1\n}"
              SetSupplementalTlsCiphers:
                value: |-
                  {
                     "method": "SetSupplementalTlsCiphers",
                     "params": {
                        "supplementalCiphers": [ <CSV List of quoted ciphers from GetSupportedTlsCiphers> ]
                     },
                      "id": 1
                  }
              Shutdown:
                value: "{\r    \"method\": \"Shutdown\",\r    \"params\": {\r        \"nodes\": [<CSV List of Node IDs>],\r        \"option\": \"<Either halt or restart>\"\r    },\r    \"id\": 1\r}"
              StartBulkVolumeRead:
                value: "{\r    \"method\": \"StartBulkVolumeRead\",\r    \"params\": {\r        \"volumeID\": <Volume ID>,\r        \"format\": \"<Either native or uncompressed>\",\r        \"snapshotID\": <Snapshot ID>,\r        \"script\": \"<Optional script name>\",\r        \"scriptParameters\": <JSON Formatted Script Parameters>,\r        \"attributes\": {}\r    },\r    \"id\": 1\r}"
              StartBulkVolumeWrite:
                value: "{\r    \"method\": \"StartBulkVolumeWrite\",\r    \"params\": {\r        \"volumeID\": <Volume ID>,\r        \"format\": \"<Either native or uncompressed>\",\r        \"script\": \"<Optional script name>\",\r        \"scriptParameters\": <JSON Formatted Script Parameters>,\r        \"attributes\": {}\r    },\r    \"id\": 1\r}"
              StartVolumePairing:
                value: "{\r    \"method\": \"StartVolumePairing\",\r    \"params\": {\r        \"volumeID\": <Volume ID>,\r        \"mode\": \"<Volume Replication Mode: Async, Sync, or SnapshotsOnly>\"\r    },\r    \"id\": 1\r}"
              TestAddressAvailability:
                value: "{\r    \"method\": \"TestAddressAvailability\",\r    \"params\": {\r        \"interface\": \"<Target network interface>\",\r        \"address\": \"<IP address to be tested>\",\r        \"virtualNetworkTag\": <Optional VLAN tag>,\r        \"timeout\": <Optional timeout in seconds, default is 5>\r    },\r    \"id\": 1\r}"
              TestDrives:
                value: "{\r    \"method\": \"TestDrives\",\r    \"params\": {\r        \"force\": true,\r        \"minutes\": <Minutes to Run Test>\r    },\r    \"id\": 1\r}"
              TestHardwareConfig:
                value: "{\r    \"method\": \"TestHardwareConfig\",\r    \"params\": {\r        \"force\": true,\r        \"clean\": <Optional boolean true or false>\r    },\r    \"id\": 1\r}"
              TestKeyProviderKmip:
                value: "{\r    \"method\": \"TestKeyProviderKmip\",\r    \"params\": {\r    \t\"keyProviderID\": <ID of the Key Provider to Test>\r    },\r    \"id\": 1\r}"
              TestKeyServerKmip:
                value: "{\r    \"method\": \"TestKeyServerKmip\",\r    \"params\": {\r    \t\"keyServerID\": <ID of the Key Server to Test>\r    },\r    \"id\": 1\r}"
              TestPing:
                value: "{\r    \"method\": \"TestPing\",\r    \"params\": {\r        \"attempts\": <Number of Pings to Attempt>,\r        \"hosts\": \"<CSV List of IP Addresses>\",\r        \"totalTimeoutSec\": <Test Timeout in Sec>,\r        \"packetSize\": <Ping Packet Size in Bytes>,\r        \"pingTimeoutMSec\": <Per Ping Timeout in MSec>,\r        \"prohibitFragmentation\": <Boolean true or false to set the DF flag>\r    },\r    \"id\": 1\r}"
      responses:
        '200':
          description: ''
      security:
      - basicAuth: []
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
tags:
- name: Accounts
- name: Cluster Admin
- name: Cluster Settings
- name: Create Cluster
- name: Drives
- name: LDAP
- name: Management Node
- name: Multi-Factor Auth
- name: Nodes
- name: Per Node
- name: Reporting
- name: Volumes
